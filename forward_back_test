#!/bin/bash
set -e
shopt -s expand_aliases

# Test file for forward back
# expect_equal is predicate function for tests,
# failure causes script to exit

file_under_test="$PWD/forward_back"

expect_equal ()
{
    echo -n "$1 "
    if [ "$2" == "$3" ]; then
        echo "[true]"
    else
        echo "[false]"
        exit 1
    fi
}

describe ()
{
    echo
    echo "$1"
    echo
}

dir_list_length ()
{
    echo "${#_goto_dir_list[@]}"
}

dir_history_length ()
{
    echo "${#_goto_dir_history[@]}"
}

current_dir_history_item ()
{
    echo "${_goto_dir_history[$_goto_dir_history_index]}"
}

current_dir_list_item ()
{
    echo "${_goto_dir_list[$_goto_dir_list_index]}"
}

setup ()
{
    echo
    echo "$1"
    echo
    cd "$dir1"
    source "$file_under_test"
}

# Directories for testing

prefix="$(dirname $(mktemp) )"

dir1="$prefix/A"
dir2="$dir1/B"
dir3="$dir2/C"
dir4="$dir3/D"

mkdir -p "$dir4"

# Begin tests

setup "When first sourced"

expect_equal "starting history length"      $(dir_history_length)           1
expect_equal "starting list length "        $(dir_list_length)              1
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir1"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir1"

# GOTO

setup "When goto is used"
goto "$dir2"

expect_equal "current history length"       $(dir_history_length)           2
expect_equal "current list length "         $(dir_list_length)              2
expect_equal "current history directory"    "$(current_dir_history_item)"   $dir2
expect_equal "current list directory"       "$(current_dir_list_item)"      $dir2

setup "When nonexistent directory is goto'ed"
x="$(mktemp -d)"
rmdir "$x"
goto "$x" 2>/dev/null

expect_equal "current history length"       $(dir_history_length)           1
expect_equal "current list length "         $(dir_list_length)              1
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir1"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir1"

setup "When using goto number"

goto "$dir2"
goto -0

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              2
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir1"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir1"

setup "When going to a place we've already been"

goto "$dir2"
goto "$dir1"

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              2
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir1"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir1"

setup "When going back i.e. 'cd -'"
goto "$dir2"
goto -

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              2
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir1"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir1"

# VERTICAL COMMANDS

setup "When using up, history is unaffected"
goto "$dir2"
up

expect_equal "current history length"       $(dir_history_length)           2
expect_equal "current list length "         $(dir_list_length)              2
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir2"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir1"

setup "When using down, history is unaffected"
goto "$dir2"
goto -0
down

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              2
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir1"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir2"

# HISTORY COMMANDS

setup "When going back with back"
goto "$dir2"
goto "$dir3"
back

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              3
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir2"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir3"

setup "When going forward"

goto "$dir2"
goto "$dir3"
back
forward

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              3
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir3"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir3"

setup "When going back then going to new directory"

goto "$dir2"
goto "$dir3"
back
goto "$dir4"

expect_equal "current history length"       $(dir_history_length)           3
expect_equal "current list length "         $(dir_list_length)              4
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir4"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir4"

setup "When dropping all directories"

goto "$dir2"
drop

expect_equal "current history length"       $(dir_history_length)           2
expect_equal "current list length "         $(dir_list_length)              1
expect_equal "current history directory"    "$(current_dir_history_item)"   "$dir2"
expect_equal "current list directory"       "$(current_dir_list_item)"      "$dir2"

echo
echo "All tests completed."
